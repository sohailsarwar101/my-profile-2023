<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">

  <title>inBrowser - Note Taking Pad, Simple, Quick & Minimal.</title>
  <meta name="title" content="Note Taking Pad, Simple, Quick & Minimal">
  <meta name="theme-color" content="#151a20">

  <link rel="stylesheet" href="css/style.css?v=00.35">
  <script src="js/query.js"></script>
 


</head>

<body>

  <header>

    <div class="header_wrp">

    <div class="logo">
        <a href="">
            <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 32 32">
                <path id="logo" data-name="logo" d="M15,15l-2,5L9,9l11,4Zm0,0,5,5M7.188,2.239l.777,2.9M5.136,7.965l-2.9-.777M13.95,4.05,11.828,6.172M6.171,11.828,4.051,13.95" transform="translate(-1.013 -1.014)" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"/>
            </svg>
            <p>inBrowser<span>.xyz</span></p>
        </a>
    </div>

    <div class="controlls">

    <div class="info">
        <a href="https://mrsohail.one/" target="_blank"></a>
    </div>

    <div class="setting [ toggle-button ] [ js-mode-toggle ]">
        <a href="javascript:void(0)" class="setting_icon" id="setting-btn"></a>
    </div>
    

    <div class="dashboard">
        <a href="https://inbrowser.xyz/"></a>
    </div>


</div>

</div>

</header>

  <div class="app_wrap">

    <div class="note__nav">
      <div class="btn side__open"></div>
      <div class="btn download__note"></div>
      <div class="btn print__note" onclick="window.print()"></div>
      <div class="btn notes__add"></div>
    </div>

    <div id="app">
      <div class="notes__sidebar">
        <button class="notes__add" type="button">Add Note</button>
        <div class="notes__list">
            <div class="notes__list-item notes__list-item--selected">
                <div class="notes__small-title">Lecture Notes</div>
                <div class="notes__small-body">I learnt nothing today.</div>
                <div class="notes__small-updated">Thursday 3:30pm</div>
            </div>

            <div class="notes__list-item">
              <div class="notes__small-title">Lecture Notes</div>
              <div class="notes__small-body">I learnt nothing today.</div>
              <div class="notes__small-updated">Thursday 3:30pm</div>
            </div>

            <div class="notes__list-item">
              <div class="notes__small-title">Lecture Notes</div>
              <div class="notes__small-body">I learnt nothing today.</div>
              <div class="notes__small-updated">Thursday 3:30pm</div>
            </div>

        </div>
      </div>

    <div class="notes__preview">
      <input class="notes__title" type="text" placeholder="Enter a title...">
      <textarea class="notes__body autosize" id="inputarea">
      </textarea>
    </div>

  </div>

  </div>

  <div class="notification" id="notify">
    <p>Link copied to clipboard successfully!</p>
  </div>

  <!-- <footer>
    <p>Copyright &copy; <script>document.write(new Date().getFullYear())</script> <a href="https://inbrowser.xyz/">inBrowser.</a></p>
  </footer> -->

<script>

  window.addEventListener('load', (event) => { 
    autosize();
    document.querySelector(".notes__sidebar").classList.add("show__sidebar");

  const isEmpty = document.querySelector('.notes__list');
  if (isEmpty.childNodes.length === 0) {
    isEmpty.innerHTML = `
      <div class="if_list_empty">
        <p>You don't have any note yet!<p>
        <span>Start creating notes by clicking [+] icon on the page.</span>
      </div>
    `;
  }

  });
  
  function autosize(){
      var text = $('.autosize');

      text.each(function(){
          $(this).attr('rows',1);
          resize($(this));
      });

      text.on('input', function(){
          resize($(this));
      });
      
      function resize ($text) {
          $text.css('height', 'auto');
          $text.css('height', $text[0].scrollHeight+'px');
      }
  }

  $(document).keypress(function(e){
    if (e.which == 13){
        $("#save_post").click();
    }
});



function download(filename, text) {
    var element = document.createElement('a');
    element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));
    element.setAttribute('download', filename);

    element.style.display = 'none';
    document.body.appendChild(element);

    element.click();

    document.body.removeChild(element);
}

document.querySelector(".download__note").addEventListener("click", function(){
    var title = document.querySelector(".notes__title").value;
    var body = document.querySelector(".notes__body").value;
    var note = title + "\n \n" + body;
    var filename = title+".txt";
    
    download(filename, note);
}, false);

</script>


<script>
  let noteSide = document.querySelector(".side__open");
  noteSide.addEventListener("click", () => {
    document.querySelector(".notes__sidebar").classList.toggle("slide__in");
  });
  
  window.onclick = function(e){
      if (!e.target.matches(".side__open") && !e.target.closest(".notes__sidebar")) {
        document.getElementById("sideBar").classList.remove("slide__in");
      }
  }
</script>



<script src="./js/main.js" type="module"></script>

<script>
  document.documentElement.classList.remove("no-js");const STORAGE_KEY="user-color-scheme",COLOR_MODE_KEY="--color-mode",modeToggleButton=document.querySelector(".js-mode-toggle"),modeToggleText=document.querySelector(".js-mode-toggle-text"),modeStatusElement=document.querySelector(".js-mode-status"),getCSSCustomProp=e=>{let t=getComputedStyle(document.documentElement).getPropertyValue(e);return t.length&&(t=t.replace(/\'|"/g,"").trim()),t},applySetting=e=>{let t=e||localStorage.getItem(STORAGE_KEY);t?(document.documentElement.setAttribute("data-user-color-scheme",t),setButtonLabelAndStatus(t)):setButtonLabelAndStatus(getCSSCustomProp("--color-mode"))},toggleSetting=()=>{let e=localStorage.getItem(STORAGE_KEY);switch(e){case null:e="dark"===getCSSCustomProp("--color-mode")?"light":"dark";break;case"light":e="dark";break;case"dark":e="light"}return localStorage.setItem(STORAGE_KEY,e),e},setButtonLabelAndStatus=e=>{modeToggleText.innerText=`${"dark"===e?"light":"dark"}`,modeStatusElement.innerText=`Current color mode is "${e}"`};modeToggleButton.addEventListener("click",e=>{e.preventDefault(),applySetting(toggleSetting())}),applySetting();
</script>

</body>

</html>